function calculate_devsecopsAutomation(db_Url, companyId, itemResponses) {
  var max_Score = 0;
  var actual_score = 0;

  Logger.log('Calculating DevSecOps Automation score');
  for(var i = 0; i < itemResponses.length; i++ ) {
    var itemResponse = itemResponses[i];
    var questionID = itemResponse.getItem().getTitle().split(".")[0] + itemResponse.getItem().getTitle().split(".")[1];
    writeResponses(db_Url, companyId, questionID, itemResponse.getResponse());

    if(itemResponse.getItem().getTitle() == 'F.1') {
      max_Score += 4;
      if(itemResponse.getResponse() == 'Source Code/Scripts , IaaS and configuration files') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'All the project related code files including 3rd Party Binaries') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == 'All the project related Code files and Releases') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    else if(itemResponse.getItem().getTitle() == 'F.2') {
      max_Score += 4;
      if(itemResponse.getResponse() == 'Inline with GIT Flow or Trunk Based Development') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'Main and Development Isolation') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == 'Main Only Policy') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    else if(itemResponse.getItem().getTitle() == 'F.3') {
      max_Score += 4;
      if(itemResponse.getResponse() == 'Passwords and Secrets are managed via Secure Vault') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'Passwords and Secrets are managed in encrypted files at location') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == 'Passwords and Secrets are managed password protected excel files') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    else if(itemResponse.getItem().getTitle() == 'F.4') {
      max_Score += 4;
      if(itemResponse.getResponse() == "Metrics generated by Test's and SAST/DAST tools") {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'Not Measured however automated tests results are used') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == 'Measured using SAST tools') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    else if((itemResponse.getItem().getTitle() == 'F.5') || (itemResponse.getItem().getTitle() == 'F.6') || (itemResponse.getItem().getTitle() == 'F.7') || (itemResponse.getItem().getTitle() == 'F.8') || (itemResponse.getItem().getTitle() == 'F.13')) {
      max_Score += 2;
      if(itemResponse.getResponse() == 'Yes') {
        actual_score += 2;
      }
      else {
        actual_score += 0;
      }
    }
    else if(itemResponse.getItem().getTitle() == 'F.9') {
      max_Score += 4;
      if(itemResponse.getResponse() == 'Cloud Provided Tools or Industry Standard tools') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'Application Logs with Log Aggregation') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == 'Applications are not monitories however relevant container logs are analyzed regularly') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    /** YET TO UPDATE BELOW VALUE */
    else if(itemResponse.getItem().getTitle() == 'F.10') {
      max_Score += 0; 
      actual_score += 0;
    }
    else if(itemResponse.getItem().getTitle() == 'F.11') {
      max_Score += 4;
      if(itemResponse.getResponse() == 'Yes, we copy the data with masking') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == 'Yes, we copy the data without masking') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
    else if((itemResponse.getItem().getTitle() == 'F.12') || (itemResponse.getItem().getTitle() == 'F.14')) {
      max_Score += 4;
      if(itemResponse.getResponse() == '> 80%') {
        actual_score += 4;
      }
      else if(itemResponse.getResponse() == '61% - 80%') {
        actual_score += 3;
      }
      else if(itemResponse.getResponse() == '41% - 60%') {
        actual_score += 2;
      }
      else {
        actual_score += 1;
      }
    }
  
  }

  Logger.log('maximum score of section F is %s', max_Score);
  Logger.log('actual score of section F is %s', actual_score);

  var score = percentage(actual_score, max_Score);
  Logger.log('DevSecOps Automation Score: %s', score);

  Logger.log('Updating DevSecOps Automation score to database');
  var sectionId = 6;
  writeScores(db_Url, companyId, sectionId, score);
  Logger.log('Updated DevSecOps Automation score');

  return score;

}
